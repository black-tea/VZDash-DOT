) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 1,
data = hin_cd1,
label = ~paste0(STNAME, ": ", FROM_, " to ", TO_))
library(leaflet)
library(jsonlite)
library(curl)
library(rgdal)
work_dir <- "C:/Users/dotcid034/Documents/GitHub/vzcd-shiny/quickmap-example"
setwd(work_dir)
# tutorial from https://rstudio.github.io/leaflet/json.html
hin <- rgdal::readOGR('json/High_Injury_Network.geojson', "OGRGeoJSON")
cd <- rgdal::readOGR('shp/council_districts')
# Subsets
cd1 <- cd[cd$DISTRICT <> '1',]
hin_cd1 <- hin[cd1,]
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addPolygons(
data = cd1,
label = ~DISTRICT
) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 1,
data = hin_cd1,
label = ~paste0(STNAME, ": ", FROM_, " to ", TO_))
library(leaflet)
library(jsonlite)
library(curl)
library(rgdal)
work_dir <- "C:/Users/dotcid034/Documents/GitHub/vzcd-shiny/quickmap-example"
setwd(work_dir)
# tutorial from https://rstudio.github.io/leaflet/json.html
hin <- rgdal::readOGR('json/High_Injury_Network.geojson', "OGRGeoJSON")
cd <- rgdal::readOGR('shp/council_districts')
# Subsets
cd1 <- cd[cd$DISTRICT != '1',]
hin_cd1 <- hin[cd1,]
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addPolygons(
data = cd1,
label = ~DISTRICT
) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 1,
data = hin_cd1,
label = ~paste0(STNAME, ": ", FROM_, " to ", TO_))
library(leaflet)
library(jsonlite)
library(curl)
library(rgdal)
work_dir <- "C:/Users/dotcid034/Documents/GitHub/vzcd-shiny/quickmap-example"
setwd(work_dir)
# tutorial from https://rstudio.github.io/leaflet/json.html
hin <- rgdal::readOGR('json/High_Injury_Network.geojson', "OGRGeoJSON")
cd <- rgdal::readOGR('shp/council_districts')
# Subsets
cd1 <- cd[cd$DISTRICT == '1',]
hin_cd1 <- hin[cd1,]
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addPolygons(
data = cd1,
label = ~DISTRICT
) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 1,
data = hin_cd1,
label = ~paste0(STNAME, ": ", FROM_, " to ", TO_))
library(leaflet)
library(jsonlite)
library(curl)
library(rgdal)
work_dir <- "C:/Users/dotcid034/Documents/GitHub/vzcd-shiny/quickmap-example"
setwd(work_dir)
# tutorial from https://rstudio.github.io/leaflet/json.html
hin <- rgdal::readOGR('json/High_Injury_Network.geojson', "OGRGeoJSON")
cd <- rgdal::readOGR('shp/council_districts')
# Subsets
cd1 <- cd[cd$DISTRICT == '2',]
hin_cd1 <- hin[cd1,]
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addPolygons(
data = cd1,
label = ~DISTRICT
) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 1,
data = hin_cd1,
label = ~paste0(STNAME, ": ", FROM_, " to ", TO_))
library(leaflet)
library(jsonlite)
library(curl)
library(rgdal)
work_dir <- "C:/Users/dotcid034/Documents/GitHub/vzcd-shiny/quickmap-example"
setwd(work_dir)
# tutorial from https://rstudio.github.io/leaflet/json.html
hin <- rgdal::readOGR('json/High_Injury_Network.geojson', "OGRGeoJSON")
cd <- rgdal::readOGR('shp/council_districts')
# Subsets
cd1 <- cd[cd$DISTRICT == '3',]
hin_cd1 <- hin[cd1,]
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addPolygons(
data = cd1,
label = ~DISTRICT
) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 1,
data = hin_cd1,
label = ~paste0(STNAME, ": ", FROM_, " to ", TO_))
library(leaflet)
library(jsonlite)
library(curl)
library(rgdal)
work_dir <- "C:/Users/dotcid034/Documents/GitHub/vzcd-shiny/quickmap-example"
setwd(work_dir)
# tutorial from https://rstudio.github.io/leaflet/json.html
hin <- rgdal::readOGR('json/High_Injury_Network.geojson', "OGRGeoJSON")
cd <- rgdal::readOGR('shp/council_districts')
# Subsets
cd1 <- cd[cd$DISTRICT == '4',]
hin_cd1 <- hin[cd1,]
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addPolygons(
data = cd1,
label = ~DISTRICT
) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 1,
data = hin_cd1,
label = ~paste0(STNAME, ": ", FROM_, " to ", TO_))
library(leaflet)
library(jsonlite)
library(curl)
library(rgdal)
work_dir <- "C:/Users/dotcid034/Documents/GitHub/vzcd-shiny/quickmap-example"
setwd(work_dir)
# tutorial from https://rstudio.github.io/leaflet/json.html
hin <- rgdal::readOGR('json/High_Injury_Network.geojson', "OGRGeoJSON")
cd <- rgdal::readOGR('shp/council_districts')
# Subsets
cd1 <- cd[cd$DISTRICT == '5',]
hin_cd1 <- hin[cd1,]
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addPolygons(
data = cd1,
label = ~DISTRICT
) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 1,
data = hin_cd1,
label = ~paste0(STNAME, ": ", FROM_, " to ", TO_))
install.packages('rgeos')
install.packages('sp')
library(sp)
library(rgeos)
library(leaflet)
library(jsonlite)
library(curl)
library(rgdal)
library(sp)
library(rgeos)
work_dir <- "C:/Users/dotcid034/Documents/GitHub/vzcd-shiny/quickmap-example"
setwd(work_dir)
# tutorial from https://rstudio.github.io/leaflet/json.html
hin <- rgdal::readOGR('json/High_Injury_Network.geojson', "OGRGeoJSON")
cd <- rgdal::readOGR('shp/council_districts')
# Subset CD layer by a specific district no
cd1 <- cd[cd$DISTRICT == '5',]
# filter hin by cd (without clipping)
hin_filter_cd1 <- hin[cd1,]
# clip hin by cd
hin_clip_cd <- gIntersection(hin, cd1, byid = TRUE, drop_lower_td = TRUE)
plot(hin_clip_cd)
hin_clip_cd <- gIntersection(hin, cd1, byid = TRUE, drop_lower_td = TRUE)
plot(hin_clip_cd)
clip <- gIntersection(hin, cd1, byid = TRUE, drop_lower_td = TRUE)
plot(clip)
plot(clip)
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addPolygons(
data = cd1,
label = ~DISTRICT
) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 1,
data = clip,
label = ~paste0(STNAME, ": ", FROM_, " to ", TO_))
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addPolygons(
data = cd1,
label = ~DISTRICT
) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 1,
data = clip)
library(leaflet)
library(jsonlite)
library(curl)
library(rgdal)
library(sp)
library(rgeos)
work_dir <- "C:/Users/dotcid034/Documents/GitHub/vzcd-shiny/quickmap-example"
setwd(work_dir)
# tutorial from https://rstudio.github.io/leaflet/json.html
hin <- rgdal::readOGR('json/High_Injury_Network.geojson', "OGRGeoJSON")
cd <- rgdal::readOGR('shp/council_districts')
# Subset CD layer by a specific district no
cd1 <- cd[cd$DISTRICT == '6',]
# filter hin by cd (without clipping)
hin_filter_cd1 <- hin[cd1,]
# clip hin by cd
# when you clip, attribute information doesn't make it over; need to fix
clip <- gIntersection(hin, cd1, byid = TRUE, drop_lower_td = TRUE)
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addPolygons(
data = cd1,
label = ~DISTRICT
) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 1,
data = clip)
#label = ~paste0(STNAME, ": ", FROM_, " to ", TO_))
library(leaflet)
library(jsonlite)
library(curl)
library(rgdal)
library(sp)
library(rgeos)
work_dir <- "C:/Users/dotcid034/Documents/GitHub/vzcd-shiny/quickmap-example"
setwd(work_dir)
# tutorial from https://rstudio.github.io/leaflet/json.html
hin <- rgdal::readOGR('json/High_Injury_Network.geojson', "OGRGeoJSON")
cd <- rgdal::readOGR('shp/council_districts')
# Subset CD layer by a specific district no
cd1 <- cd[cd$DISTRICT == '6',]
# filter hin by cd (without clipping)
hin_filter_cd1 <- hin[cd1,]
# clip hin by cd
# when you clip, attribute information doesn't make it over; need to fix
clip <- gIntersection(hin, cd1, byid = TRUE, drop_lower_td = TRUE)
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addPolygons(
data = cd1,
label = ~DISTRICT
) %>%
addPolylines(
color = '#D3D3D3',
weight = 3,
opacity = 0.5,
label = ~paste0(STNAME, ": ", FROM_, " to ", TO_)
) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 1,
data = clip)
#label = ~paste0(STNAME, ": ", FROM_, " to ", TO_))
library(leaflet)
library(jsonlite)
library(curl)
library(rgdal)
library(sp)
library(rgeos)
work_dir <- "C:/Users/dotcid034/Documents/GitHub/vzcd-shiny/quickmap-example"
setwd(work_dir)
# tutorial from https://rstudio.github.io/leaflet/json.html
hin <- rgdal::readOGR('json/High_Injury_Network.geojson', "OGRGeoJSON")
cd <- rgdal::readOGR('shp/council_districts')
# Subset CD layer by a specific district no
cd1 <- cd[cd$DISTRICT == '6',]
# filter hin by cd (without clipping)
hin_filter_cd1 <- hin[cd1,]
# clip hin by cd
# when you clip, attribute information doesn't make it over; need to fix
clip <- gIntersection(hin, cd1, byid = TRUE, drop_lower_td = TRUE)
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addPolygons(
data = cd1,
label = ~DISTRICT
) %>%
addPolylines(
color = '#D3D3D3',
weight = 3,
opacity = 0.5,
data = hin,
label = ~paste0(STNAME, ": ", FROM_, " to ", TO_)
) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 1,
data = clip)
#label = ~paste0(STNAME, ": ", FROM_, " to ", TO_))
library(leaflet)
library(jsonlite)
library(curl)
library(rgdal)
library(sp)
library(rgeos)
work_dir <- "C:/Users/dotcid034/Documents/GitHub/vzcd-shiny/quickmap-example"
setwd(work_dir)
# tutorial from https://rstudio.github.io/leaflet/json.html
hin <- rgdal::readOGR('json/High_Injury_Network.geojson', "OGRGeoJSON")
cd <- rgdal::readOGR('shp/council_districts')
# Subset CD layer by a specific district no
cd1 <- cd[cd$DISTRICT == '6',]
# filter hin by cd (without clipping)
hin_filter_cd1 <- hin[cd1,]
# clip hin by cd
# when you clip, attribute information doesn't make it over; need to fix
clip <- gIntersection(hin, cd1, byid = TRUE, drop_lower_td = TRUE)
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addPolygons(
data = cd1,
label = ~DISTRICT
) %>%
addPolylines(
color = '#808080',
weight = 3,
opacity = 1,
data = hin,
label = ~paste0(STNAME, ": ", FROM_, " to ", TO_)
) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 1,
data = clip)
#label = ~paste0(STNAME, ": ", FROM_, " to ", TO_))
library(leaflet)
library(jsonlite)
library(curl)
library(rgdal)
library(sp)
library(rgeos)
work_dir <- "C:/Users/dotcid034/Documents/GitHub/vzcd-shiny/quickmap-example"
setwd(work_dir)
# tutorial from https://rstudio.github.io/leaflet/json.html
hin <- rgdal::readOGR('json/High_Injury_Network.geojson', "OGRGeoJSON")
cd <- rgdal::readOGR('shp/council_districts')
# Subset CD layer by a specific district no
cd1 <- cd[cd$DISTRICT == '6',]
# filter hin by cd (without clipping)
hin_filter_cd1 <- hin[cd1,]
# clip hin by cd
# when you clip, attribute information doesn't make it over; need to fix
clip <- gIntersection(hin, cd1, byid = TRUE, drop_lower_td = TRUE)
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addPolygons(
data = cd1,
label = ~DISTRICT
) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 0.5,
data = hin,
label = ~paste0(STNAME, ": ", FROM_, " to ", TO_)
) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 1,
data = clip)
#label = ~paste0(STNAME, ": ", FROM_, " to ", TO_))
library(leaflet)
library(jsonlite)
library(curl)
library(rgdal)
library(sp)
library(rgeos)
work_dir <- "C:/Users/dotcid034/Documents/GitHub/vzcd-shiny/quickmap-example"
setwd(work_dir)
# tutorial from https://rstudio.github.io/leaflet/json.html
hin <- rgdal::readOGR('json/High_Injury_Network.geojson', "OGRGeoJSON")
cd <- rgdal::readOGR('shp/council_districts')
# Subset CD layer by a specific district no
cd1 <- cd[cd$DISTRICT == '6',]
# filter hin by cd (without clipping)
hin_filter_cd1 <- hin[cd1,]
# clip hin by cd
# when you clip, attribute information doesn't make it over; need to fix
clip <- gIntersection(hin, cd1, byid = TRUE, drop_lower_td = TRUE)
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addPolygons(
data = cd1,
fill = FALSE,
label = ~DISTRICT
) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 0.5,
data = hin,
label = ~paste0(STNAME, ": ", FROM_, " to ", TO_)
) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 1,
data = clip)
#label = ~paste0(STNAME, ": ", FROM_, " to ", TO_))
library(leaflet)
library(jsonlite)
library(curl)
library(rgdal)
library(sp)
library(rgeos)
work_dir <- "C:/Users/dotcid034/Documents/GitHub/vzcd-shiny/quickmap-example"
setwd(work_dir)
# tutorial from https://rstudio.github.io/leaflet/json.html
hin <- rgdal::readOGR('json/High_Injury_Network.geojson', "OGRGeoJSON")
cd <- rgdal::readOGR('shp/council_districts')
##### clipping and Subsetting
# Subset CD layer by a specific district no
cd1 <- cd[cd$DISTRICT == '6',]
# filter hin by cd (without clipping)
hin_filter_cd1 <- hin[cd1,]
# clip hin by cd
# when you clip, attribute information doesn't make it over; need to fix
clip <- gIntersection(hin, cd1, byid = TRUE, drop_lower_td = TRUE)
##### Create the Map
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addPolygons(
data = cd1,
#fill = FALSE,
label = ~DISTRICT
) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 0.5,
data = hin,
label = ~paste0(STNAME, ": ", FROM_, " to ", TO_)
) %>%
addPolylines(
color = '#f44242',
weight = 3,
opacity = 1,
data = clip)
#label = ~paste0(STNAME, ": ", FROM_, " to ", TO_))
