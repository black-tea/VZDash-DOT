shiny::runApp('GitHub/vzcd-shiny/shiny-examples-master/086-bus-dashboard')
runApp('GitHub/vzcd-shiny/shiny-examples-master/086-bus-dashboard')
dirColors <-c("1"="#595490", "2"="#527525", "3"="#A93F35", "4"="#BA48AA")
print(dirColors)
dirColors[1]
dirColors['1']
cd_boundaries <- rgdal::readOGR('shp/council_districts')
work_dir <- "C:/Users/dotcid034/Documents/GitHub/vzcd-shiny/quickmap-example"
setwd(work_dir)
cd_boundaries <- rgdal::readOGR('shp/council_districts')
Names(cd_boundaries)
runApp('~/GitHub/vzcd-shiny/app/VZ_Viewer')
runApp('~/GitHub/vzcd-shiny/app/VZ_Viewer')
runApp('~/GitHub/vzcd-shiny/app/VZ_Viewer')
cdNums <- sort(unique(as.numeric(cd_boundaries$DISTRICT)))
# Add names, so that we can add all=0
names(cdNums) <- cdNums
cdNums <- c(All = 0, cdNums)
cdNums
if (interactive()) {
# basic example
shinyApp(
ui = fluidPage(
selectInput("variable", "Variable:",
c("Cylinders" = "cyl",
"Transmission" = "am",
"Gears" = "gear")),
tableOutput("data")
),
server = function(input, output) {
output$data <- renderTable({
mtcars[, c("mpg", input$variable), drop = FALSE]
}, rownames = TRUE)
}
)
# demoing optgroup support in the `choices` arg
shinyApp(
ui = fluidPage(
selectInput("state", "Choose a state:",
list(`East Coast` = c("NY", "NJ", "CT"),
`West Coast` = c("WA", "OR", "CA"),
`Midwest` = c("MN", "WI", "IA"))
),
textOutput("result")
),
server = function(input, output) {
output$result <- renderText({
paste("You chose", input$state)
})
}
)
}
cpa_boundaries <- rgdal::readOGR('data/shp/community_planning_areas')
work_dir <- "C:/Users/dotcid034/Documents/GitHub/vzcd-shiny/app/VZ_Viewer"
setwd(work_dir)
cpa_boundaries <- rgdal::readOGR('data/shp/community_planning_areas')
summary(cpa_boundaries)
head(cpa_boundaries)
nc_boundaries <- rgdal::readOGR('data/shp/neighborhood_councils')
summary(nc_boundaries)
head(nc_boundaries)
geo_name_cols <- c('cd_boundaries' = 'DISTRICT', 'cpa_boundaries' = 'NAME_ALF', 'nc_boundaries' = 'NAME')
geo_name_cols['cd_boundaries']
geo_name_cols['cd_boundaries',]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
