st_write(caltrans_merge, 'caltrans__major.shp')
shiny::runApp('GitHub/vzcd-shiny/app/VZ_Viewer')
install.packages("mapedit")
library(mapedit)
library(leaflet)
library(mapview)
editMap(leaflet() %>% addTiles())
editMap(
mapview(breweries91),
targetLayerId = "breweries91"
)
shiny::runApp('GitHub/vzcd-shiny/app/VZ_Viewer')
shiny::runApp('GitHub/vzcd-shiny')
runApp('GitHub/vzcd-shiny')
runApp('GitHub/vzcd-shiny')
runApp('GitHub/vzcd-shiny')
install.packages('plumber')
library(plumber)
r <- plumb('C:\Users\dotcid034\Documents\R_TestScripts\mailgun_test.R')
r <- plump('C:/Users/dotcid034/Documents/R_TestScripts/mailgun_test.R')
r <- plumb('C:/Users/dotcid034/Documents/R_TestScripts/mailgun_test.R')
r$run(port=8000)
install.packages('analogsea')
rm(list=ls())
# Access socrata api for collisions
# First I need to access the socrata API to get the length - number of records
# Second, make the request
record_ct = 10
record_ct = toString(record_ct)
request = paste0('https://data.lacity.org/resource/k8cc-2d49.geojson?$limit=',record_ct)
print(request)
# default limit to 1000 collisions
#d = read_sf(request)
rm(list=ls())
# Access socrata api for collisions
# First I need to access the socrata API to get the length - number of records
# Second, make the request
record_ct = 10
record_ct = toString(record_ct)
request = paste0('https://data.lacity.org/resource/k8cc-2d49.geojson?$limit=',record_ct)
print(request)
# default limit to 1000 collisions
d = read_sf(request)
library(sf)
# Access socrata api for collisions
# First I need to access the socrata API to get the length - number of records
# Second, make the request
record_ct = 10
record_ct = toString(record_ct)
request = paste0('https://data.lacity.org/resource/k8cc-2d49.geojson?$limit=',record_ct)
print(request)
# default limit to 1000 collisions
d = read_sf(request)
library(sf)
# Access socrata api for collisions
# Step 1: need to access the socrata API to get the length - number of records
# Step 2: make the request
record_ct = 10
record_ct = toString(record_ct)
request = paste0('https://data.lacity.org/resource/k8cc-2d49.geojson?$limit=',record_ct)
print(request)
# default limit to 1000 collisions
d = read_sf(request)
# Step 3: Clean MO Codes using TidyR
View(d)
collisions$mocodes
d$mocodes
strsplit(mocodes)
strsplit(d$mocodes)
strsplit(d$mocodes, ' ')
as.integer(strsplit(d$mocodes, ' '))
test1 <- C(1,2,3,4,5)
test1 <- c(1:5)
test2 <- c(4:8)
test1 %in% test2
4 %in% test1
any(test1 %in% test2)
library(sf)
ped_inv_codes = 3003
bike_inv_codes = c(3008, 3016, 3017, 3018)
mc_inv_codes = c(3009, 3013, 3014, 3015)
hit_and_run_codes = c(3029, 3030)
# Access socrata api for collisions
# Step 1: need to access the socrata API to get the length - number of records
# Step 2: make the request
record_ct = 45000
record_ct = toString(record_ct)
request = paste0('https://data.lacity.org/resource/k8cc-2d49.geojson?$limit=',record_ct)
print(request)
# default limit to 1000 collisions
collisions = read_sf(request)
# Step 3: Clean MO Codes using TidyR
collisions <- collisions %>%
mutate(severity = case_when(3027 %in% as.integer(strsplit(mocodes, ' ')) ~ 1,
3024 %in% as.integer(strsplit(mocodes, ' ')) ~ 2,
3025 %in% as.integer(strsplit(mocodes, ' ')) ~ 3,
3026 %in% as.integer(strsplit(mocodes, ' ')) ~ 4,
3028 %in% as.integer(strsplit(mocodes, ' ')) ~ 0)) %>%
mutate(ped_inv = ifelse(any(ped_inv_codes %in% as.integer(strsplit(mocodes, ' '))),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(bike_inv_codes %in% as.integer(strsplit(mocodes, ' '))),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(mc_inv_codes %in% as.integer(strsplit(mocodes, ' '))),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(hit_and_run_codes %in% as.integer(strsplit(mocodes, ' '))),'Y',NA))
# Step 3: Clean MO Codes using TidyR
collisions <- collisions %>%
mutate(severity = case_when(3027 %in% as.integer(strsplit(mocodes, ' ')) ~ 1,
3024 %in% as.integer(strsplit(mocodes, ' ')) ~ 2,
3025 %in% as.integer(strsplit(mocodes, ' ')) ~ 3,
3026 %in% as.integer(strsplit(mocodes, ' ')) ~ 4,
3028 %in% as.integer(strsplit(mocodes, ' ')) ~ 0)) %>%
mutate(ped_inv = ifelse(any(ped_inv_codes %in% as.integer(strsplit(mocodes, ' '))),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(bike_inv_codes %in% as.integer(strsplit(mocodes, ' '))),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(mc_inv_codes %in% as.integer(strsplit(mocodes, ' '))),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(hit_and_run_codes %in% as.integer(strsplit(mocodes, ' '))),'Y',NA))
library(dplyr)
# Step 3: Clean MO Codes using TidyR
collisions <- collisions %>%
mutate(severity = case_when(3027 %in% as.integer(strsplit(mocodes, ' ')) ~ 1,
3024 %in% as.integer(strsplit(mocodes, ' ')) ~ 2,
3025 %in% as.integer(strsplit(mocodes, ' ')) ~ 3,
3026 %in% as.integer(strsplit(mocodes, ' ')) ~ 4,
3028 %in% as.integer(strsplit(mocodes, ' ')) ~ 0)) %>%
mutate(ped_inv = ifelse(any(ped_inv_codes %in% as.integer(strsplit(mocodes, ' '))),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(bike_inv_codes %in% as.integer(strsplit(mocodes, ' '))),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(mc_inv_codes %in% as.integer(strsplit(mocodes, ' '))),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(hit_and_run_codes %in% as.integer(strsplit(mocodes, ' '))),'Y',NA))
# Step 3: Clean MO Codes using TidyR
collisions <- collisions %>%
mutate(severity = case_when(3027 %in% as.integer(unlist(strsplit(mocodes, ' '))) ~ 1,
3024 %in% as.integer(unlist(strsplit(mocodes, ' '))) ~ 2,
3025 %in% as.integer(unlist(strsplit(mocodes, ' '))) ~ 3,
3026 %in% as.integer(unlist(strsplit(mocodes, ' '))) ~ 4,
3028 %in% as.integer(unlist(strsplit(mocodes, ' '))) ~ 0)) %>%
mutate(ped_inv = ifelse(any(ped_inv_codes %in% as.integer(unlist(strsplit(mocodes, ' ')))),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(bike_inv_codes %in% as.integer(unlist(strsplit(mocodes, ' ')))),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(mc_inv_codes %in% as.integer(unlist(strsplit(mocodes, ' ')))),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(hit_and_run_codes %in% as.integer(unlist(strsplit(mocodes, ' ')))),'Y',NA))
View(collisions)
collisions <- collisions %>%
mutate(severity = case_when(3027 %in% strsplit(mocodes, ' ') ~ 1,
3024 %in% strsplit(mocodes, ' ') ~ 2,
3025 %in% strsplit(mocodes, ' ') ~ 3,
3026 %in% strsplit(mocodes, ' ') ~ 4,
3028 %in% strsplit(mocodes, ' ') ~ 0)) %>%
mutate(ped_inv = ifelse(any(ped_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(bike_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(mc_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(hit_and_run_codes %in% strsplit(mocodes, ' ')),'Y',NA))
View(collisions)
#3027
# Step 3: Clean MO Codes using TidyR
collisions <- collisions %>%
mutate(severity = case_when('1051' %in% strsplit(mocodes, ' ') ~ 1,
3024 %in% strsplit(mocodes, ' ') ~ 2,
3025 %in% strsplit(mocodes, ' ') ~ 3,
3026 %in% strsplit(mocodes, ' ') ~ 4,
3028 %in% strsplit(mocodes, ' ') ~ 0)) %>%
mutate(ped_inv = ifelse(any(ped_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(bike_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(mc_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(hit_and_run_codes %in% strsplit(mocodes, ' ')),'Y',NA))
View(collisions)
#3027
# Step 3: Clean MO Codes using TidyR
collisions <- collisions %>%
mutate(severity = case_when('1300' %in% strsplit(mocodes, ' ') ~ 1,
3024 %in% strsplit(mocodes, ' ') ~ 2,
3025 %in% strsplit(mocodes, ' ') ~ 3,
3026 %in% strsplit(mocodes, ' ') ~ 4,
3028 %in% strsplit(mocodes, ' ') ~ 0)) %>%
mutate(ped_inv = ifelse(any(ped_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(bike_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(mc_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(hit_and_run_codes %in% strsplit(mocodes, ' ')),'Y',NA))
#3027
# Step 3: Clean MO Codes using TidyR
collisions <- collisions %>%
mutate(severity = case_when('0605' %in% strsplit(mocodes, ' ') ~ 1,
3024 %in% strsplit(mocodes, ' ') ~ 2,
3025 %in% strsplit(mocodes, ' ') ~ 3,
3026 %in% strsplit(mocodes, ' ') ~ 4,
3028 %in% strsplit(mocodes, ' ') ~ 0)) %>%
mutate(ped_inv = ifelse(any(ped_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(bike_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(mc_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(hit_and_run_codes %in% strsplit(mocodes, ' ')),'Y',NA))
#3027
# Step 3: Clean MO Codes using TidyR
collisions <- collisions %>%
mutate(severity = case_when('0605' %in% mocodes ~ 1,
3024 %in% strsplit(mocodes, ' ') ~ 2,
3025 %in% strsplit(mocodes, ' ') ~ 3,
3026 %in% strsplit(mocodes, ' ') ~ 4,
3028 %in% strsplit(mocodes, ' ') ~ 0)) %>%
mutate(ped_inv = ifelse(any(ped_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(bike_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(mc_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(hit_and_run_codes %in% strsplit(mocodes, ' ')),'Y',NA))
View(collisions)
'test' %in% 'testview'
#3027
# Step 3: Clean MO Codes using TidyR
collisions <- collisions %>%
mutate(severity = case_when('0605' %in% mocodes ~ 7,
3024 %in% strsplit(mocodes, ' ') ~ 2,
3025 %in% strsplit(mocodes, ' ') ~ 3,
3026 %in% strsplit(mocodes, ' ') ~ 4,
3028 %in% strsplit(mocodes, ' ') ~ 0)) %>%
mutate(ped_inv = ifelse(any(ped_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(bike_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(mc_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(hit_and_run_codes %in% strsplit(mocodes, ' ')),'Y',NA))
grepl('test','testval')
#3027
# Step 3: Clean MO Codes using TidyR
collisions <- collisions %>%
mutate(severity = case_when(grepl('0605',mocodes) ~ 1,
3024 %in% strsplit(mocodes, ' ') ~ 2,
3025 %in% strsplit(mocodes, ' ') ~ 3,
3026 %in% strsplit(mocodes, ' ') ~ 4,
3028 %in% strsplit(mocodes, ' ') ~ 0)) %>%
mutate(ped_inv = ifelse(any(ped_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(bike_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(mc_inv_codes %in% strsplit(mocodes, ' ')),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(hit_and_run_codes %in% strsplit(mocodes, ' ')),'Y',NA))
any(grepl(bike_inv_codes,'3007 3004 3008'))
any(grep(bike_inv_codes,'3007 3004 3008'))
any(grep(bike_inv_codes,'3007 3004 3016'))
any(grep('3007 3004 3016',bike_inv_codes))
any(sapply(grepl(bike_inv_codes,'3007 3004 3016')))
any(sapply(bike_inv_codes, grepl, '3007 3004 3016'))
collisions <- collisions %>%
mutate(severity = case_when(grepl('3027',mocodes) ~ 1,
grepl('3024',mocodes) ~ 2,
grepl('3025',mocodes) ~ 3,
grepl('3026',mocodes) ~ 4,
grepl('3028',mocodes) ~ 0)) %>%
mutate(ped_inv = ifelse(any(sapply(ped_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(sapply(bike_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(sapply(mc_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(sapply(hit_and_run_codes, grepl, mocodes)),'Y',NA))
View(collisions)
collisions <- collisions %>%
mutate(severity = case_when(grepl('3027',mocodes) ~ 1,
grepl('3024',mocodes) ~ 2,
grepl('3025',mocodes) ~ 3,
grepl('3026',mocodes) ~ 4,
grepl('3028',mocodes) ~ 0))
View(collisions)
collisions <- collisions %>%
rowwise() %>%
mutate(severity = case_when(grepl('3027',mocodes) ~ 1,
grepl('3024',mocodes) ~ 2,
grepl('3025',mocodes) ~ 3,
grepl('3026',mocodes) ~ 4,
grepl('3028',mocodes) ~ 0)) %>%
mutate(ped_inv = ifelse(any(sapply(ped_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(sapply(bike_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(sapply(mc_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(sapply(hit_and_run_codes, grepl, mocodes)),'Y',NA))
View(collisions)
View(collisions)
install.packages('httr')
install.packages("httr")
library(httr)
response = GET('https://data.lacity.org/resource/k8cc-2d49.json?$select=count(dr_no)')
content(response, 'text')
content(response, "text", encoding = "ISO-8859-1")
content(response, 'raw')
str(content(r,'parsed'))
str(content(response,'parsed'))
record_ct <- content(response, 'parsed')
record_ct <- content(response, 'parsed')[[1]]
record_ct
record_ct <- content(response, 'parsed')[[[1]]]
response <- GET('https://data.lacity.org/resource/k8cc-2d49.json?$select=count(dr_no)')
record_ct <- content(response, 'parsed')[1][1]
record_ct
record_ct <- content(response, 'parsed')[[1]]
record_ct
record_ct <- content(response, 'parsed')[[1]][1]
record_ct
record_ct <- content(response, 'parsed')[1][[1]]
record_ct
record_ct <- content(response, 'parsed')[1]
record_ct
record_ct <- content(response, 'parsed')[[1]]
record_ct
record_ct <- content(response, 'parsed')[[1]][[1]]
record_ct
typeof(record_ct)
library(sf)
library(dplyr)
library(httr)
# MO Codes
ped_inv_codes = '3003'
bike_inv_codes = c('3008', '3016', '3017', '3018')
mc_inv_codes = c('3009', '3013', '3014', '3015')
hit_and_run_codes = c('3029', '3030')
# Access socrata api for collisions
# Metadata URL
# https://data.lacity.org/api/views/metadata/v1/k8cc-2d49
# Step 1: need to access the socrata API to get the length - number of records
response <- GET('https://data.lacity.org/resource/k8cc-2d49.json?$select=count(dr_no)')
record_ct <- content(response, 'parsed')[[1]][[1]]
# Step 2: make the request
request = paste0('https://data.lacity.org/resource/k8cc-2d49.geojson?$limit=',record_ct)
collisions = read_sf(request)
# Step 3: Clean MO Codes
collisions <- collisions %>%
# rowwise() makes sure that the mutate operations don't use data from the entire df
rowwise() %>%
mutate(severity = case_when(grepl('3027',mocodes) ~ 1,
grepl('3024',mocodes) ~ 2,
grepl('3025',mocodes) ~ 3,
grepl('3026',mocodes) ~ 4,
grepl('3028',mocodes) ~ 0)) %>%
mutate(ped_inv = ifelse(any(sapply(ped_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(sapply(bike_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(sapply(mc_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(sapply(hit_and_run_codes, grepl, mocodes)),'Y',NA)) %>%
# remove rowwise operation
ungroup()
View(collisions)
library(sf)
library(dplyr)
library(httr)
# MO Codes
ped_inv_codes = '3003'
bike_inv_codes = c('3008', '3016', '3017', '3018')
mc_inv_codes = c('3009', '3013', '3014', '3015')
hit_and_run_codes = c('3029', '3030')
# Current Plan: Download only 2018 data (so there is not too much in memory)
# Next steps: Download entire dataset by (1) get length and (2) set limit to length and (3) save to Spatialite & query Spatialite
# sqlite would be better when I setup a container
# Access socrata api for collisions
# Metadata URL https://data.lacity.org/api/views/metadata/v1/k8cc-2d49
# Step 1: need to access the socrata API to get the length - number of records
#response <- GET('https://data.lacity.org/resource/k8cc-2d49.json?$select=count(dr_no)')
#record_ct <- content(response, 'parsed')[[1]][[1]]
# Step 2: make the request
#request = paste0('https://data.lacity.org/resource/k8cc-2d49.geojson?$limit=',record_ct)
#collisions = read_sf(request)
# Step 1&2 (current): Query for collisions since this year
request = 'https://data.lacity.org/resource/k8cc-2d49.geojson?$where=date_extract_y(date_occ)=2018'
collisions = read_sf(request)
# Step 3: Clean MO Codes
collisions <- collisions %>%
# rowwise() makes sure that the mutate operations don't use data from the entire df
rowwise() %>%
mutate(severity = case_when(grepl('3027',mocodes) ~ 1,
grepl('3024',mocodes) ~ 2,
grepl('3025',mocodes) ~ 3,
grepl('3026',mocodes) ~ 4,
grepl('3028',mocodes) ~ 0)) %>%
mutate(ped_inv = ifelse(any(sapply(ped_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(sapply(bike_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(sapply(mc_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(sapply(hit_and_run_codes, grepl, mocodes)),'Y',NA)) %>%
# remove rowwise operation
ungroup()
library(sf)
library(dplyr)
library(httr)
# MO Codes
ped_inv_codes = '3003'
bike_inv_codes = c('3008', '3016', '3017', '3018')
mc_inv_codes = c('3009', '3013', '3014', '3015')
hit_and_run_codes = c('3029', '3030')
# Current Plan: Download only 2018 data (so there is not too much in memory)
# Next steps: Download entire dataset by (1) get length and (2) set limit to length and (3) save to Spatialite & query Spatialite
# sqlite would be better when I setup a container
# Access socrata api for collisions
# Metadata URL https://data.lacity.org/api/views/metadata/v1/k8cc-2d49
# Step 1: need to access the socrata API to get the length - number of records
response <- GET('https://data.lacity.org/resource/k8cc-2d49.json?$select=count(dr_no)')
record_ct <- content(response, 'parsed')[[1]][[1]]
# Step 2: make the request
#request = paste0('https://data.lacity.org/resource/k8cc-2d49.geojson?$limit=',record_ct)
#collisions = read_sf(request)
# Step 1&2 (current): Query for collisions since this year
request = paste0('https://data.lacity.org/resource/k8cc-2d49.geojson?$where=date_extract_y(date_occ)=2018&limit=',record_ct)
collisions = read_sf(request)
# Step 3: Clean MO Codes
collisions <- collisions %>%
# rowwise() makes sure that the mutate operations don't use data from the entire df
rowwise() %>%
mutate(severity = case_when(grepl('3027',mocodes) ~ 1,
grepl('3024',mocodes) ~ 2,
grepl('3025',mocodes) ~ 3,
grepl('3026',mocodes) ~ 4,
grepl('3028',mocodes) ~ 0)) %>%
mutate(ped_inv = ifelse(any(sapply(ped_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(sapply(bike_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(sapply(mc_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(sapply(hit_and_run_codes, grepl, mocodes)),'Y',NA)) %>%
# remove rowwise operation
ungroup()
library(sf)
library(dplyr)
library(httr)
# MO Codes
ped_inv_codes = '3003'
bike_inv_codes = c('3008', '3016', '3017', '3018')
mc_inv_codes = c('3009', '3013', '3014', '3015')
hit_and_run_codes = c('3029', '3030')
# Current Plan: Download only 2018 data (so there is not too much in memory)
# Next steps: Download entire dataset by (1) get length and (2) set limit to length and (3) save to Spatialite & query Spatialite
# sqlite would be better when I setup a container
# Access socrata api for collisions
# Metadata URL https://data.lacity.org/api/views/metadata/v1/k8cc-2d49
# Step 1: need to access the socrata API to get the length - number of records
response <- GET('https://data.lacity.org/resource/k8cc-2d49.json?$select=count(dr_no)')
record_ct <- content(response, 'parsed')[[1]][[1]]
# Step 2: make the request
#request = paste0('https://data.lacity.org/resource/k8cc-2d49.geojson?$limit=',record_ct)
#collisions = read_sf(request)
# Step 1&2 (current): Query for collisions since this year
request = paste0('https://data.lacity.org/resource/k8cc-2d49.geojson?$where=date_extract_y(date_occ)=2018&$limit=',record_ct)
collisions = read_sf(request)
# Step 3: Clean MO Codes
collisions <- collisions %>%
# rowwise() makes sure that the mutate operations don't use data from the entire df
rowwise() %>%
mutate(severity = case_when(grepl('3027',mocodes) ~ 1,
grepl('3024',mocodes) ~ 2,
grepl('3025',mocodes) ~ 3,
grepl('3026',mocodes) ~ 4,
grepl('3028',mocodes) ~ 0)) %>%
mutate(ped_inv = ifelse(any(sapply(ped_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(sapply(bike_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(sapply(mc_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(sapply(hit_and_run_codes, grepl, mocodes)),'Y',NA)) %>%
# remove rowwise operation
ungroup()
write_sf(collisions, 'data/lapd_collisions/collisions.geojson')
str(collisions)
collisions2 = read_sf(request)
str(collisions2)
write_sf(collisions2, 'data/lapd_collisions/collisions.geojson')
getwd()
ls
setwd("~/GitHub/vzcd-shiny")
write_sf(collisions, 'data/lapd_collisions/collisions.geojson')
write_sf(collisions2, 'data/lapd_collisions/collisions.geojson')
str(collisions2)
str(collisions)
# Step 1&2 (current): Query for collisions since this year, with no limit
request = paste0('https://data.lacity.org/resource/k8cc-2d49.geojson?$where=date_extract_y(date_occ)=2018&$limit=',record_ct)
collisions = read_sf(request)
# Step 3: Clean MO Codes
collisions <- collisions %>%
# rowwise() makes sure that the mutate operations don't use data from the entire df
rowwise() %>%
mutate(severity = case_when(grepl('3027',mocodes) ~ 1,
grepl('3024',mocodes) ~ 2,
grepl('3025',mocodes) ~ 3,
grepl('3026',mocodes) ~ 4,
grepl('3028',mocodes) ~ 0)) %>%
mutate(ped_inv = ifelse(any(sapply(ped_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(sapply(bike_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(sapply(mc_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(sapply(hit_and_run_codes, grepl, mocodes)),'Y',NA)) #%>%
# remove rowwise operation
#ungroup()
# Export to geojson (future will dump to sqlite + spatailite)
write_sf(collisions, 'data/lapd_collisions/collisions.geojson')
str(collisions)
# Step 1&2 (current): Query for collisions since this year, with no limit
request = paste0('https://data.lacity.org/resource/k8cc-2d49.geojson?$where=date_extract_y(date_occ)=2018&$limit=',record_ct)
collisions = read_sf(request)
# Step 3: Clean MO Codes
collisions <- collisions %>%
# rowwise() makes sure that the mutate operations don't use data from the entire df
rowwise() %>%
mutate(severity = case_when(grepl('3027',mocodes) ~ 1,
grepl('3024',mocodes) ~ 2,
grepl('3025',mocodes) ~ 3,
grepl('3026',mocodes) ~ 4,
grepl('3028',mocodes) ~ 0)) %>%
mutate(ped_inv = ifelse(any(sapply(ped_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(sapply(bike_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(sapply(mc_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(sapply(hit_and_run_codes, grepl, mocodes)),'Y',NA)) %>%
# remove rowwise operation
ungroup()
# Step 3: Clean MO Codes
collisions <- collisions %>%
# rowwise() makes sure that the mutate operations don't use data from the entire df
rowwise() %>%
mutate(severity = case_when(grepl('3027',mocodes) ~ 1,
grepl('3024',mocodes) ~ 2,
grepl('3025',mocodes) ~ 3,
grepl('3026',mocodes) ~ 4,
grepl('3028',mocodes) ~ 0)) %>%
mutate(ped_inv = ifelse(any(sapply(ped_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(bike_inv = ifelse(any(sapply(bike_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(mc_inv = ifelse(any(sapply(mc_inv_codes, grepl, mocodes)),'Y',NA)) %>%
mutate(hit_and_run = ifelse(any(sapply(hit_and_run_codes, grepl, mocodes)),'Y',NA)) %>%
# remove rowwise operation
ungroup() %>%
st_sf()
write_sf(collisions, 'data/lapd_collisions/collisions.geojson')
View(collisions)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('googlesheets')
